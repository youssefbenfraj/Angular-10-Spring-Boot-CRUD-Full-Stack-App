# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data 
  namespace: empp-application
  labels:
    app: Employeedb
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentdb
  namespace: empp-application
spec:
  selector:
    matchLabels:
      app: Employeedb
  replicas: 1
  template:
    metadata:
      labels:
        app: Employeedb
    spec:
      containers:
        - name: employeesql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: employee_management_system
          volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
      - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentfront
  namespace: empp-application
spec:
  selector:
    matchLabels:
      app: Employeefront
  replicas: 1
  template:
    metadata:
      labels:
        app: Employeefront
    spec:
      containers:
        - name: employeeangular
          image: wetmonkey/emppfront-aks:39
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentback
  namespace: empp-application
spec:
  selector:
    matchLabels:
      app: Employeeback
  replicas: 1
  template:
    metadata:
      labels:
        app: Employeeback
    spec:
      containers:
        - name: employeespring
          image: wetmonkey/emppback-aks:39
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: angular-service
  namespace: empp-application
spec:
  selector:
    app: Employeefront
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: spring-service
  namespace: empp-application
spec:
  selector:
    app: Employeeback
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: sql-service
  namespace: empp-application
spec:
  selector:
    app: Employeedb
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
  type: ClusterIP
